from keras.layers import LSTM, Layer,Dense
from keras import Model

class Encoder(Layer):
    def __init__(self,hiddens_num):
        super(Encoder, self).__init__()
        self.hiddens_num = hiddens_num
        self.lstm = LSTM(hiddens_num,return_sequences=True,return_state=True)

    def call(self,z):
        output = self.lstm(z,initial_state=None)
        states = output[1:]
        return output[0], states

class Decoder(Layer):
    def __init__(self,hiddens_num,Pred_num):
        super(Decoder, self).__init__()
        self.hiddens_num = hiddens_num
        self.lstm = LSTM(hiddens_num,return_sequences=True,return_state=True)
        self.Dense = Dense(Pred_num)
    
    def init_state(self,states):
        return states[1]

    def call(self,u,states):
        output = self.lstm(u,states)
        y = self.Dense(output[0])
        return y

class EncoderDecoder(Model):
    def __init__(self,encoder,decoder):
        super(EncoderDecoder,self).__init__()
        self.encoder = encoder
        self.decoder = decoder

    def call(self,input):
        Z, dec_U = input
        enc_outputs = self.encoder(Z)
        dec_state = self.decoder.init_state(enc_outputs)
        return self.decoder(dec_U,dec_state)