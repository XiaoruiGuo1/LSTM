import sys
import os
import math
import numpy as np
import tensorflow as tf
from matplotlib import pyplot as plt
from sklearn.model_selection import train_test_split

u = np.zeros(180)
x = np.zeros(181)
q = np.arange(0,180)
k = np.arange(0,181)
x[0] = 0
i = 0
for i in range (0,179):
       u[i] = np.sin(i*np.pi/20) 
       x[i + 1] = 0.9*x[i] + 2*u[i]
print(f"Shape of x:{x.shape}")
print(f"shape of u:{u.shape}")

def u_plot (x_axis,y_axis,x_label,y_label):
    plt.figure(figsize = (11, 6))
    plt.plot(x_axis, y_axis, color ='black')
    plt.xlabel(x_label, {'fontsize': 12}) 
    plt.ylabel(y_label, {'fontsize': 12})
u_plot (q,u,'k','u')
u_plot (k,x,'k','x')
plt.show()

y = x.reshape(181,1)
u = u.reshape(180,1)
train_ind = int(180/1.8)
y_train = y[1:train_ind+1]
y_test = y[train_ind+1:]
u_train = u[:train_ind]
u_test = u[train_ind:]

from keras.preprocessing.sequence import TimeseriesGenerator
train_generator = TimeseriesGenerator(
    u_train, y_train,
    length = 4,
    sampling_rate = 1,
    stride = 1,
    batch_size = 1)
test_generator = TimeseriesGenerator(
    u_test, y_test,
    length   = 4,
    sampling_rate= 1,
    stride = 1, 
    batch_size = 1)

from keras.models import Sequential
from keras.layers import Dense
from keras.layers import LSTM

model = Sequential()
model.add(LSTM(4))
model.add(Dense(1))
model.compile(optimizer='adam', loss='mse')
model.fit(train_generator,epochs=300)

test_predictions = model.predict(test_generator)
print(test_predictions.shape)


z = np.arange(101,177)
g = np.arange(101,181)
h = np.arange(0,100)
fig, ax = plt.subplots(1, 1, figsize=(15, 5))
ax.plot(h,y_train, lw=2, label='train data')
ax.plot(g,y_test, lw=3, c='y', label='test data')
ax.plot(z,test_predictions, lw=4, c='r',linestyle = ':', label='predictions')
ax.legend(loc="lower left")
plt.show();
